{"ast":null,"code":"import * as api from \"../api/index.js\";\nimport { FETCH_ALL, FETCH_BY_SEARCH, UPDATE, DELETE, LIKE, CREATE, START_LOADING, END_LOADING } from '../constants/actionTypes'; //Action Creators\n\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    console.log('Delete!');\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","FETCH_ALL","FETCH_BY_SEARCH","UPDATE","DELETE","LIKE","CREATE","START_LOADING","END_LOADING","getPosts","page","dispatch","type","data","fetchPosts","payload","error","console","log","message","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"sources":["/Users/shizhanli/Desktop/blog/client/src/actions/posts.js"],"sourcesContent":["import * as api from \"../api/index.js\";\nimport {FETCH_ALL,FETCH_BY_SEARCH,UPDATE,DELETE,LIKE, CREATE,START_LOADING,END_LOADING} from '../constants/actionTypes';\n//Action Creators\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({type:START_LOADING});\n    const { data } = await api.fetchPosts(page);\n    dispatch({ type: FETCH_ALL, payload: data });\n    dispatch({type:END_LOADING});\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getPostsBySearch=(searchQuery)=> async(dispatch)=>{\n  try {\n    dispatch({type:START_LOADING});\n    const {data:{data}}=await api.fetchPostsBySearch(searchQuery);\n    dispatch({ type: FETCH_BY_SEARCH, payload: data });\n    dispatch({type:END_LOADING});\n    \n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n      dispatch({type:START_LOADING});\n      const { data } = await api.createPost(post);\n      dispatch({ type: CREATE, payload: data });\n     \n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\nexport const updatePost=(id,post)=>async (dispatch)=>{\n\n    try{\n        const {data}=await api.updatePost(id,post);\n        dispatch({type:UPDATE,payload:data})\n    }\n    catch(error){\n        console.log(error);\n\n    }\n\n}\n\nexport const deletePost=(id)=>async(dispatch)=>{\n   try{\n     await api.deletePost(id);\n     console.log('Delete!');\n     dispatch({type:DELETE,payload:id})\n   }\n   catch(error){\n     console.log(error);\n   }\n}\n\nexport const likePost=(id)=>async(dispatch)=>{\n  try{\n    const {data} = await api.likePost(id);\n    dispatch({type:LIKE,payload:data})\n  }\n  catch(error){\n    console.log(error);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}